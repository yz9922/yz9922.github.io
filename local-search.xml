<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用免费的Github Pages + Hexo搭建个人博客</title>
    <link href="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/"/>
    <url>/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/</url>
    
    <content type="html"><![CDATA[<p>一、简介<br>1.GitHub Pages 是通过 GitHub 托管和发布的公共网页。官方文档：<a href="https://docs.github.com/zh/pages">https://docs.github.com/zh/pages</a><br>2.Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。官方文档：<a href="https://hexo.io/zh-cn/docs">https://hexo.io/zh-cn/docs</a><br>二、准备工作<br>1.GitHub账户<br>如果你没有Github账号，需要去Github官网 <a href="https://github.com/">https://github.com</a> 注册一个账号<br>2.安装Git<br>前往Git官网 <a href="https://git-scm.com/">https://git-scm.com/</a> 下载适合自己系统的安装包，默认安装即可<br>3.安装Node.js<br>前往Node.js官网 <a href="https://nodejs.org/en/download">https://nodejs.org/en/download</a> 下载适合自己系统的安装包，默认安装即可<br>三、新建Github仓库<br>首先，进入Github官网 <a href="https://github.com/">https://github.com</a> 并登录你的账号；<br>点击右上角个人头像，然后打开Your repositories；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github1.png" class=""><p>点击右上角的New创建新的仓库；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github2.png" class=""><p>仓库名为你自己的GitHub用户名后面加上“.github.io”，然后勾选Public，再勾选Add a README file，最后点击Create repository；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github3.png" class=""><p>此时你的网站已经创建成功了，打开 https:&#x2F;&#x2F;你的用户名.github.io 就可以看到Github创建的一个默认网页。（注：GitHub Pages 站点的软限制为每小时 10 次生成。如果打开链接没有内容或者不是你最新的更改，等待几分钟即可，如果网页长时间打不开，可能需要梯子。）<br>你可以通过修改 index.html 文件来进行一些简单的测试。<br>四、Git登录<br>在桌面右键，点击Git Bash Here打开Git窗口，然后输入以下命令（引号中填写自己的邮箱和用户名）：<br>git config –global user.email “<a href="mailto:&#121;&#111;&#117;&#x40;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;">&#121;&#111;&#117;&#x40;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;</a>“<br>git config –global user.name “Your Name”<br>然后输入命令以生成密钥（引号中填写自己的邮箱）：<br>ssh-keygen -t rsa -C “<a href="mailto:&#121;&#111;&#117;&#x72;&#x5f;&#101;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x79;&#x6f;&#117;&#114;&#x65;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#121;&#111;&#117;&#x72;&#x5f;&#101;&#x6d;&#x61;&#x69;&#x6c;&#x40;&#x79;&#x6f;&#117;&#114;&#x65;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a>“<br>输入以下命令将密钥内容复制到剪切板：<br>clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub<br>打开Github.com，点击右上角的头像，选择Settings；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github4.png" class=""><p>点击SSH and GPG keys，然后点击New SSH key；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github5.png" class=""><p>在Key一栏中粘贴你刚刚复制的密钥，最后点击Add SSH key；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github6.png" class=""><p>输入以下命令测试Git是否登录成功（此处命令直接复制，无需修改）：<br>ssh -T <a href="mailto:&#103;&#105;&#x74;&#64;&#103;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;">&#103;&#105;&#x74;&#64;&#103;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;</a><br>出现以下情况输入yes然后按回车：</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/git1.png" class=""><p>最后出现这样的信息说明登录成功了！</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/git2.png" class=""><p>五、安装Hexo<br>首先选择一个位置新建一个用于安装Hexo的文件夹，我是在D盘新建了一个名为Hexo的文件夹；<br>进入该文件夹，右键打开Git Bash Here，然后输入以下命令安装Hexo，安装速度取决于你的网络：<br>npm install -g hexo-cli<br>可以通过以下命令来查看自己安装的版本以验证是否安装成功：<br>hexo -v<br>然后输入以下命令安装用于Hexo部署到Git的部署器：<br>npm install hexo-deployer-git –save<br>在刚才新建的文件夹中再新建一个文件夹作为博客目录，我的文件夹名为HexoPages；<br>进入该文件夹，右键打开Git Bash Here，输入以下命令初始化hexo：<br>hexo init<br>然后输入以下命令生成页面：<br>hexo generate<br>再输入以下命令启动本地服务器：<br>hexo server<br>这样就可以前往 <a href="http://localhost:4000/">http://localhost:4000/</a> 看到hexo默认创建的一个helloworld的页面。<br>六、部署到Github服务器<br>进入Github打开刚刚创建的项目，点击右上角的Code，选择SSH，点击右边的复制按钮；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github7.png" class=""><p>打开博客目录中的 _config.yml 修改下面几项，其中repository项填写刚刚复制的内容（冒号后需要一个英文空格！）：</p><h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-https-hexo-io-docs-one-command-deployment"><a href="#Docs-https-hexo-io-docs-one-command-deployment" class="headerlink" title="Docs: https://hexo.io/docs/one-command-deployment"></a>Docs: <a href="https://hexo.io/docs/one-command-deployment">https://hexo.io/docs/one-command-deployment</a></h2><p>deploy:<br>  type: git<br>  repository: <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;</a>:yz9922&#x2F;yz9922.github.io.git<br>  branch: main</p><p>之后执行下面的命令生成并部署到github服务器：<br>hexo g -d<br>如果出现<br>七、更换主题<br>由于官方默认主题不能满足我的需求且不够美观，所以选择一个其他的主题，主题可以前往 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a> 进行挑选，我选择了Fluid主题，以下教程以Fluid为例（官方教程： <a href="https://hexo.fluid-dev.com/docs/start">https://hexo.fluid-dev.com/docs/start</a> ）。<br>首先进入博客目录执行以下命令：<br>npm install –save hexo-theme-fluid<br>然后在博客目录下创建 _config.fluid.yml， 将主题的 _config.yml 内容复制过去。<br>之后修改 Hexo 博客目录中的 _config.yml 中的theme和language两项：<br>theme: fluid  # 指定主题<br>language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改<br>首次使用主题的「关于页」需要手动用下面的命令创建：<br>hexo new page about<br>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md， 添加 layout 属性（layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。）。<br>修改后的文件示例如下：</p><hr><h2 id="title-标题layout-about"><a href="#title-标题layout-about" class="headerlink" title="title: 标题layout: about"></a>title: 标题<br>layout: about</h2><p>这里写关于页的正文，支持 Markdown, HTML</p><p>执行以下命令生成并启动本地服务器（加-d会同时部署到github服务器上）：<br>hexo g -d<br>hexo s<br>前往 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到Fluid主题的默认博客页面。<br>八、个性化修改</p><p>九、新建文章<br>打开博客目录中 _config.yml ，找到下面这一项修改如下，这样新建一篇文章时会新建一个同名文件夹用于存放文章中的图片文件：<br>post_asset_folder: true<br>执行以下命令创建一篇新文章名为“测试文章”：<br>hexo new post 测试文章<br>执行完成后在source_posts目录下生成了一个md文件和一个同名的资源目录(用于存放图片)；<br>在资源目录测试文章中放一张图片 test.jpg，然后打开 测试文章.md ，进行如下修改（图片插入方式见官方文档 <a href="https://hexo.io/zh-cn/docs/asset-folders">https://hexo.io/zh-cn/docs/asset-folders</a> ）：</p><hr><p>title: 测试文章<br>date: 2023-07-21 15:15:13<br>tags:</p><ul><li>测试<br>categories:</li><li>Test<br>—这是一篇测试文章</li></ul><p>生成并启动本地服务器：<br>hexo g -d<br>hexo s<br>前往 <a href="http://localhost:4000/">http://localhost:4000/</a> ，看到测试文章添加成功。</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/test1.png" class="">]]></content>
    
    
    
    <tags>
      
      <tag>建站</tag>
      
      <tag>教程</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/07/21/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/07/21/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章<img src="/2023/07/21/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.jpg" class="" title="这是一张测试图片"></p>]]></content>
    
    
    <categories>
      
      <category>Test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/20/hello-world/"/>
    <url>/2023/07/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
