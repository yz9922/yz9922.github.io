<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用免费的Github Pages + Hexo搭建个人博客</title>
    <link href="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/"/>
    <url>/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/</url>
    
    <content type="html"><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><ol><li>GitHub Pages 是通过 GitHub 托管和发布的公共网页。 <a href="https://docs.github.com/zh/pages">官方文档</a></li><li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 <a href="https://hexo.io/zh-cn/docs">官方文档</a></li></ol><h1 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h1><ol><li>GitHub账户<br>如果你没有Github账号，需要去 <a href="https://github.com/">Github官网</a> 注册一个账号</li><li>安装Git<br>前往 <a href="https://git-scm.com/">Git官网</a> 下载适合自己系统的安装包，默认安装即可</li><li>安装Node.js<br>前往 <a href="https://nodejs.org/en/download">Node.js官网</a> 下载适合自己系统的安装包，默认安装即可</li></ol><h1 id="三、新建Github仓库"><a href="#三、新建Github仓库" class="headerlink" title="三、新建Github仓库"></a>三、新建Github仓库</h1><p>首先，进入 <a href="https://github.com/">Github官网</a> 并登录你的账号；<br>点击右上角个人头像，然后打开 Your repositories；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github1.png" class=""><p>点击右上角的 New 创建新的仓库；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github2.png" class=""><p>仓库名为你自己的GitHub用户名后面加上 “.github.io” ，然后勾选 Public ，再勾选 Add a README file ，最后点击 Create repository ；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github3.png" class=""><p>此时你的网站已经创建成功了，打开 “https:&#x2F;&#x2F;你的用户名.github.io” 就可以看到Github创建的一个默认网页。（注：GitHub Pages 站点的软限制为每小时 10 次生成。如果打开链接没有内容或者不是你最新的更改，等待几分钟即可，如果网页长时间打不开，可能需要梯子。）<br>你可以通过修改 index.html 文件来进行一些简单的测试。</p><h1 id="四、Git登录"><a href="#四、Git登录" class="headerlink" title="四、Git登录"></a>四、Git登录</h1><p>在桌面右键，点击 Git Bash Here 打开Git窗口，然后输入以下命令（引号中填写自己的邮箱和用户名）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure><p>然后输入命令以生成密钥（引号中填写自己的邮箱）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</span><br></pre></td></tr></table></figure><p>输入以下命令将密钥内容复制到剪切板：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>打开 <a href="https://github.com/">Github官网</a> ，点击右上角的头像，选择 Settings ；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github4.png" class=""><p>点击 SSH and GPG keys ，然后点击 New SSH key ；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github5.png" class=""><p>在 Key 一栏中粘贴你刚刚复制的密钥，最后点击 Add SSH key ；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github6.png" class=""><p>输入以下命令测试Git是否登录成功（此处命令直接复制，无需修改）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现以下情况输入 yes 然后按回车：</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/git1.png" class=""><p>最后出现这样的信息说明登录成功了！</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/git2.png" class=""><h1 id="五、安装Hexo"><a href="#五、安装Hexo" class="headerlink" title="五、安装Hexo"></a>五、安装Hexo</h1><p>首先选择一个位置新建一个用于安装Hexo的文件夹，我是在D盘新建了一个名为Hexo的文件夹；<br>进入该文件夹，右键打开 Git Bash Here ，然后输入以下命令安装Hexo，安装速度取决于你的网络：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>可以通过以下命令来查看自己安装的版本以验证是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>然后输入以下命令安装用于Hexo部署到Git的部署器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>在刚才新建的文件夹中再新建一个文件夹作为博客目录，我的文件夹名为 HexoPages ；<br>进入该文件夹，右键打开 Git Bash Here ，输入以下命令初始化hexo：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>然后输入以下命令生成页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>再输入以下命令启动本地服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>这样就可以前往 <a href="http://localhost:4000/">http://localhost:4000/</a> 看到hexo默认创建的一个helloworld的页面。<br>注： <a href="https://hexo.io/zh-cn/docs/commands">Hexo指令官方文档</a></p><h1 id="六、部署到Github服务器"><a href="#六、部署到Github服务器" class="headerlink" title="六、部署到Github服务器"></a>六、部署到Github服务器</h1><p>进入Github打开刚刚创建的项目，点击右上角的 Code ，选择 SSH ，点击右边的复制按钮；</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/github7.png" class=""><p>打开博客目录中的 _config.yml 修改下面几项，其中 repository 项填写刚刚复制的内容（<span style="color: red; ">冒号后需要一个英文空格！</span>）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yz9922/yz9922.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>之后执行下面的命令生成并部署到github服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>如果出现如下信息说明部署成功了：</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/git3.png" class=""><p>然后你就可以通过 “https:&#x2F;&#x2F;你的用户名.github.io” 链接访问查看你的博客了。</p><h1 id="七、更换主题"><a href="#七、更换主题" class="headerlink" title="七、更换主题"></a>七、更换主题</h1><p>由于官方默认主题不能满足我的需求且不够美观，所以选择一个其他的主题，主题可以前往 <a href="https://hexo.io/themes">官方主题站</a> 进行挑选，我选择了Fluid主题，以下教程以Fluid为例（ <a href="https://hexo.fluid-dev.com/docs/start">官方教程</a> ）。<br>首先进入博客目录执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-theme-fluid</span><br></pre></td></tr></table></figure><p>然后在博客目录下创建 _config.fluid.yml ，将主题的 _config.yml 内容复制过去。<br>之后修改 Hexo 博客目录中的 _config.yml 中的theme和language两项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">theme: fluid  # 指定主题</span><br><span class="line">language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改</span><br></pre></td></tr></table></figure><p>首次使用主题的「关于页」需要手动用下面的命令创建：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md ，添加 layout 属性（<span style="color: red; ">layout: about 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</span>）。<br>修改后的文件示例如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">layout: about</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">这里写关于页的正文，支持 Markdown, HTML</span><br></pre></td></tr></table></figure><p>执行以下命令生成并启动本地服务器（加-d会同时部署到github服务器上）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>前往 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到Fluid主题的默认博客页面。</p><h1 id="八、个性化修改"><a href="#八、个性化修改" class="headerlink" title="八、个性化修改"></a>八、个性化修改</h1><p>打开博客目录下的 _config.yml ，修改以下项：</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/config0.png" class=""><p>然后打开博客目录下的 _config.fluid.yml ，根据注释以及个人需求对相应项进行修改。<br><span style="color: red;">注意：其中的图片都需要保存在source目录下，这样就可以通过相对路径读取。</span></p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/config1.png" class=""><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/config2.png" class=""><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/config3.png" class=""><h1 id="九、新建文章"><a href="#九、新建文章" class="headerlink" title="九、新建文章"></a>九、新建文章</h1><p>打开博客目录中 _config.yml ，找到下面这一项修改如下，这样新建一篇文章时会新建一个同名文件夹用于存放文章中的图片文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>执行以下命令创建一篇新文章名为“测试文章”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post 测试文章</span><br></pre></td></tr></table></figure><p>执行完成后在 source_posts 目录下生成了一个md文件和一个同名的资源目录(用于存放图片)；<br>在资源目录测试文章中放一张图片 test.jpg ，然后打开 测试文章.md ，进行如下修改（图片插入方式见 <a href="https://hexo.io/zh-cn/docs/asset-folders">官方文档</a> ）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 测试文章</span><br><span class="line">date: 2023-07-21 15:15:13</span><br><span class="line">tags:</span><br><span class="line">- 测试</span><br><span class="line">categories:</span><br><span class="line">- Test</span><br><span class="line">---这是一篇测试文章&#123;% asset_img test.jpg 这是一张测试图片 %&#125;</span><br></pre></td></tr></table></figure><p>生成并启动本地服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>前往 <a href="http://localhost:4000/">http://localhost:4000/</a> ，看到测试文章添加成功。</p><img src="/2023/07/21/Github-Pages-Hexo-Blog-Tutorial/test1.png" class=""><p>附写文章攻略： <a href="https://hexo.fluid-dev.com/posts/fluid-write">https://hexo.fluid-dev.com/posts/fluid-write</a> </p><h1 id="十、最终效果展示"><a href="#十、最终效果展示" class="headerlink" title="十、最终效果展示"></a>十、最终效果展示</h1><p>如果遇到修改未生效等问题可以使用下面的命令来清除缓存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>然后执行下面的命令部署到服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>最终效果：<br><a href="https://yz9922.github.io/">https://yz9922.github.io/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>建站</tag>
      
      <tag>教程</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/07/21/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2023/07/21/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章<img src="/2023/07/21/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/test.jpg" class="" title="这是一张测试图片"></p>]]></content>
    
    
    <categories>
      
      <category>Test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/20/hello-world/"/>
    <url>/2023/07/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
